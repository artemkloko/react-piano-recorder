{"version":3,"sources":["SoundfontProvider.tsx","MidiRouter.tsx","utils.ts","Recorder.tsx","Piano.tsx","Player.tsx","library/queries.ts","library/RecordingForm.tsx","library/LibraryRecording.tsx","library/index.tsx","Stage.tsx","App.tsx","index.tsx"],"names":["Format","Soundfont","MidiRouter","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addMidiIn","name","_ref","isLoading","playNote","stopNote","stopAllNotes","setState","currentState","receivers","objectSpread","defineProperty","addMidiOut","deviceNames","handleNotePress","handleNoteRelease","handleStopAllNotes","midiNumber","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","deviceName","value","state","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","senders","inherits","createClass","key","render","React","Component","SoundfontProvider","loadInstrument","asyncToGenerator","regenerator_default","a","mark","_callee","instrumentName","instrument","wrap","_context","prev","SoundfontPlayer","audioContext","format","soundfont","nameToUrl","concat","hostname","sent","stop","_x","apply","arguments","_ref2","_callee2","audioNode","_context2","resume","play","activeAudioNodes","assign","_x2","_ref3","_callee3","_context3","abrupt","_x3","_callee4","_context4","values","forEach","node","midiIn","prevProps","prevState","react_default","createElement","defaultProps","secondsToClock","seconds","m","Math","floor","s","toFixed","Recorder","componentDidMount","componentWillUnmount","clearInterval","clock","displayRecordingDuration","isRecording","displayDuration","currentTime","start","stillPressed","note","absoluteTime","recording","events","toConsumableArray","midiPressEventToMidiEvent","_currentState","pressedEvents","keys","map","midiPressEvent","time","duration","startRecording","createdAt","Date","stopRecording","_currentState2","onStopRecording","setInterval","Jumbotron_default","Button_default","variant","size","onClick","index_esm","noteRange","first","MidiNumbers","fromNote","last","keyboardShortcuts","KeyboardShortcuts","create","firstNote","lastNote","keyboardConfig","HOME_ROW","Piano","activeNotes","filter","activeNote","_componentDidMount","react_piano_esm","disabled","midiOut","width","Player","checkSchedule","isPlaying","schedule","length","event","shift","action","reduce","midiEvent","push","sort","b","GET_RECORDINGS","gql","_templateObject","ADD_RECORDING","_templateObject2","RecordingForm","setTitle","currentTarget","title","cancel","onCancel","save","onConfirm","Modal_default","show","onHide","Form_default","onSubmit","Body","Group","controlId","Label","Control","type","placeholder","onChange","Footer","RecordingFormWithQuery","react_apollo_esm","mutation","addRecording","data","RecordingForm_RecordingForm","variables","LibraryRecording","_getPrototypeOf2","_len","args","Array","_key","style","float","toLocaleString","Library","onPlay","currentlyPlaying","onStop","newRecording","saveRecording","recordings","cancelSaving","_this2","i","ListGroup_default","Item","LibraryRecording_LibraryRecording","library_RecordingForm","LibraryWithQuery","query","loading","error","message","library_Library","window","AudioContext","webkitAudioContext","Stage","src_MidiRouter","src_SoundfontProvider","src_Piano","src_Player","library","src_Recorder","App","className","Stage_Stage","client","ApolloClient","uri","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f2494b70.chunk.js","sourcesContent":["import React from \"react\";\nimport SoundfontPlayer from \"soundfont-player\";\nimport { MidiNoteConsumer } from \"react-piano\";\n\nimport { MidiSender } from \"./@types\";\n\nenum Format {\n  \"mp3\",\n  \"ogg\"\n}\n\nenum Soundfont {\n  \"MusyngKite\",\n  \"FluidR3_GM\"\n}\n\ntype OwnProps = {\n  instrumentName: SoundfontPlayer.InstrumentName;\n  hostname?: string;\n  format?: Format;\n  soundfont?: Soundfont;\n  audioContext: AudioContext;\n  midiIn: MidiSender;\n};\n\ntype State = {\n  activeAudioNodes: {\n    [key: string]: SoundfontPlayer.Player;\n  };\n  instrument: SoundfontPlayer.Player | null;\n};\n\nclass SoundfontProvider extends React.Component<OwnProps, State> {\n  static defaultProps = {\n    format: \"mp3\",\n    soundfont: \"MusyngKite\",\n    instrumentName: \"acoustic_grand_piano\",\n    hostname: \"https://d1pzp51pvbm36p.cloudfront.net\"\n  };\n\n  constructor(props: OwnProps) {\n    super(props);\n    this.state = {\n      activeAudioNodes: {} as State[\"activeAudioNodes\"],\n      instrument: null\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadInstrument(this.props.instrumentName);\n    this.props.midiIn({\n      isLoading: !this.state.instrument,\n      playNote: this.playNote,\n      stopNote: this.stopNote,\n      stopAllNotes: this.stopAllNotes\n    });\n  }\n\n  componentDidUpdate(prevProps: OwnProps, prevState: State) {\n    if (prevProps.instrumentName !== this.props.instrumentName) {\n      this.loadInstrument(this.props.instrumentName);\n    }\n  }\n\n  loadInstrument = async (instrumentName: SoundfontPlayer.InstrumentName) => {\n    // Re-trigger loading state\n    this.setState({\n      instrument: null\n    });\n\n    const instrument = await SoundfontPlayer.instrument(\n      this.props.audioContext,\n      instrumentName,\n      {\n        format: this.props.format,\n        soundfont: this.props.soundfont,\n        nameToUrl: (name: string, soundfont: string, format: string) => {\n          return `${this.props.hostname}/${soundfont}/${name}-${format}.js`;\n        }\n      }\n    );\n\n    this.setState({\n      instrument\n    });\n  };\n\n  playNote: MidiNoteConsumer = async midiNumber => {\n    await this.props.audioContext.resume();\n\n    if (this.state.instrument !== null) {\n      const audioNode = this.state.instrument.play(midiNumber);\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: audioNode\n        })\n      });\n    }\n  };\n\n  stopNote: MidiNoteConsumer = async midiNumber => {\n    await this.props.audioContext.resume();\n\n    if (!this.state.activeAudioNodes[midiNumber]) {\n      return;\n    }\n    const audioNode = this.state.activeAudioNodes[midiNumber];\n    audioNode.stop();\n    this.setState({\n      activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n        [midiNumber]: null\n      })\n    });\n  };\n\n  // Clear any residual notes that don't get called with stopNote\n  stopAllNotes = async () => {\n    await this.props.audioContext.resume();\n\n    const activeAudioNodes = Object.values(this.state.activeAudioNodes);\n    activeAudioNodes.forEach(node => {\n      if (node) {\n        node.stop();\n      }\n    });\n    this.setState({\n      activeAudioNodes: {}\n    });\n  };\n\n  render() {\n    return <div />;\n  }\n}\n\nexport default SoundfontProvider;\n","import React, { ReactNode } from \"react\";\nimport { MidiNoteConsumer } from \"react-piano\";\nimport \"react-piano/dist/styles.css\";\n\nimport { MidiSender, MidiReceiver } from \"./@types\";\n\ntype AddMidiIn = (name: string) => MidiSender;\ntype AddMidiOut = (deviceNames: string[]) => MidiReceiver;\n\ntype Props = {\n  render: (renderProps: RenderProps) => ReactNode;\n};\n\ntype State = {\n  receivers: { [name: string]: MidiReceiver };\n  senders: { [name: string]: MidiReceiver };\n};\n\ntype RenderProps = {\n  addMidiIn: AddMidiIn;\n  addMidiOut: AddMidiOut;\n};\n\nexport class MidiRouter extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      receivers: {},\n      senders: {}\n    };\n  }\n\n  addMidiIn: AddMidiIn = name => {\n    return ({ isLoading, playNote, stopNote, stopAllNotes }) => {\n      this.setState(currentState => ({\n        receivers: {\n          ...currentState.receivers,\n          [name]: {\n            isLoading,\n            playNote,\n            stopNote,\n            stopAllNotes\n          }\n        }\n      }));\n    };\n  };\n\n  addMidiOut: AddMidiOut = deviceNames => {\n    return {\n      isLoading: false,\n      playNote: this.handleNotePress(deviceNames),\n      stopNote: this.handleNoteRelease(deviceNames),\n      stopAllNotes: this.handleStopAllNotes(deviceNames)\n    };\n  };\n\n  handleNotePress = (deviceNames: string[]): MidiNoteConsumer => midiNumber => {\n    for (let deviceName of deviceNames) {\n      if (this.state.receivers[deviceName]) {\n        this.state.receivers[deviceName].playNote(midiNumber);\n      }\n    }\n  };\n\n  handleNoteRelease = (\n    deviceNames: string[]\n  ): MidiNoteConsumer => midiNumber => {\n    for (let deviceName of deviceNames) {\n      if (this.state.receivers[deviceName]) {\n        this.state.receivers[deviceName].stopNote(midiNumber);\n      }\n    }\n  };\n\n  handleStopAllNotes = (deviceNames: string[]) => () => {\n    for (let deviceName of deviceNames) {\n      if (this.state.receivers[deviceName]) {\n        this.state.receivers[deviceName].stopAllNotes();\n      }\n    }\n  };\n\n  render() {\n    return this.props.render({\n      addMidiIn: this.addMidiIn,\n      addMidiOut: this.addMidiOut\n    });\n  }\n}\n\nexport default MidiRouter;\n","export const secondsToClock = (seconds: number): string => {\n  const m = Math.floor(seconds / 60);\n  const s = seconds % 60;\n  return `${m < 10 ? 0 : \"\"}${m}:${s < 10 ? 0 : \"\"}${s.toFixed(3)}`;\n};\n\nexport default {\n  secondsToClock\n};\n","import React from \"react\";\nimport { MidiNoteConsumer } from \"react-piano\";\nimport { FaStop, FaCircle } from \"react-icons/fa\";\nimport Button from \"react-bootstrap/Button\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport { MidiSender, MidiPressEvent, MidiEvent, Recording } from \"./@types\";\nimport { secondsToClock } from \"./utils\";\n\nexport type RecorderProps = {\n  midiIn: MidiSender;\n  audioContext: AudioContext;\n  onStopRecording?: (recording: Recording) => void;\n};\n\nexport type RecorderState = {\n  isRecording: boolean;\n  start: number;\n  displayDuration: number;\n  stillPressed: {\n    [note: string]: MidiPressEvent;\n  };\n  recording: Recording | null;\n  clock: NodeJS.Timeout;\n};\n\nexport class Recorder extends React.Component<RecorderProps, RecorderState> {\n  constructor(props: RecorderProps) {\n    super(props);\n    this.state = {\n      isRecording: false,\n      start: 0,\n      displayDuration: 0,\n      stillPressed: {},\n      recording: null,\n      clock: setInterval(this.displayRecordingDuration, 100)\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.midiIn({\n      isLoading: false,\n      playNote: this.playNote,\n      stopNote: this.stopNote,\n      stopAllNotes: this.stopAllNotes\n    });\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.state.clock);\n  };\n\n  displayRecordingDuration = () => {\n    if (this.state.isRecording) {\n      this.setState({\n        displayDuration: this.props.audioContext.currentTime - this.state.start\n      });\n    }\n  };\n\n  playNote: MidiNoteConsumer = midiNumber => {\n    this.setState(currentState => {\n      return {\n        stillPressed: {\n          ...currentState.stillPressed,\n          [midiNumber]: {\n            note: midiNumber,\n            absoluteTime: this.props.audioContext.currentTime\n          }\n        }\n      };\n    });\n  };\n\n  stopNote: MidiNoteConsumer = midiNumber => {\n    this.setState(currentState => {\n      let { isRecording, start, stillPressed, recording } = currentState;\n      const currentTime = this.props.audioContext.currentTime;\n      if (isRecording && recording !== null) {\n        recording = {\n          ...recording,\n          events: [\n            ...recording.events,\n            this.midiPressEventToMidiEvent(\n              stillPressed[midiNumber],\n              currentTime,\n              start\n            )\n          ]\n        };\n      }\n\n      delete stillPressed[midiNumber];\n      return {\n        stillPressed,\n        recording\n      };\n    });\n  };\n\n  stopAllNotes = () => {\n    this.setState(currentState => {\n      let { start, stillPressed, recording } = { ...currentState };\n      const currentTime = this.props.audioContext.currentTime;\n      const pressedEvents = Object.keys(stillPressed).map(midiNumber =>\n        this.midiPressEventToMidiEvent(\n          stillPressed[midiNumber],\n          currentTime,\n          start\n        )\n      );\n      if (recording !== null) {\n        recording = {\n          ...recording,\n          events: [...recording.events, ...pressedEvents]\n        };\n      }\n      return {\n        recording\n      };\n    });\n  };\n\n  midiPressEventToMidiEvent = (\n    midiPressEvent: MidiPressEvent,\n    currentTime: number,\n    start: RecorderState[\"start\"]\n  ): MidiEvent => {\n    const time =\n      midiPressEvent.absoluteTime >= start\n        ? midiPressEvent.absoluteTime - start\n        : 0;\n    const duration = currentTime - start - time;\n    return {\n      note: midiPressEvent.note,\n      time: time,\n      duration: duration\n    };\n  };\n\n  startRecording = () => {\n    this.setState({\n      isRecording: true,\n      start: this.props.audioContext.currentTime,\n      recording: {\n        createdAt: new Date(),\n        events: []\n      }\n    });\n  };\n\n  stopRecording = () => {\n    this.stopAllNotes();\n    this.setState(currentState => {\n      let { start, recording } = { ...currentState };\n      if (recording !== null) {\n        recording.duration = this.props.audioContext.currentTime - start;\n        if (this.props.onStopRecording) {\n          this.props.onStopRecording(recording);\n        }\n      }\n      return {\n        isRecording: false,\n        displayDuration: 0,\n        recording\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <h1>\n            {this.state.isRecording === false ? (\n              <Button variant=\"primary\" size=\"lg\" onClick={this.startRecording}>\n                <FaCircle />\n              </Button>\n            ) : (\n              <Button variant=\"primary\" size=\"lg\" onClick={this.stopRecording}>\n                <FaStop />\n              </Button>\n            )}\n            {\" \" + secondsToClock(this.state.displayDuration)}\n          </h1>\n          <p>\n            Just hit the record button and let the magic happen.\n            <br />\n            You can resample your recordings by playing them while recoding.\n          </p>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n","import React from \"react\";\nimport {\n  Piano as ReactPiano,\n  MidiNumbers,\n  KeyboardShortcuts,\n  MidiNumber,\n  MidiNoteConsumer\n} from \"react-piano\";\n\nimport { MidiReceiver, MidiSender } from \"./@types\";\n\nconst noteRange = {\n  first: MidiNumbers.fromNote(\"c3\"),\n  last: MidiNumbers.fromNote(\"f4\")\n};\n\nconst keyboardShortcuts = KeyboardShortcuts.create({\n  firstNote: noteRange.first,\n  lastNote: noteRange.last,\n  keyboardConfig: KeyboardShortcuts.HOME_ROW\n});\n\nexport type PianoProps = {\n  midiOut: MidiReceiver;\n  midiIn: MidiSender;\n};\n\nexport type PianoState = {\n  activeNotes: MidiNumber[];\n};\n\nexport class Piano extends React.Component<PianoProps, PianoState> {\n  constructor(props: PianoProps) {\n    super(props);\n    this.state = {\n      activeNotes: []\n    };\n  }\n\n  async componentDidMount() {\n    this.props.midiIn({\n      isLoading: false,\n      playNote: this.playNote,\n      stopNote: this.stopNote,\n      stopAllNotes: this.stopAllNotes\n    });\n  }\n\n  playNote: MidiNoteConsumer = midiNumber => {\n    this.setState(currentState => ({\n      activeNotes: [...currentState.activeNotes, midiNumber]\n    }));\n  };\n\n  stopNote: MidiNoteConsumer = midiNumber => {\n    this.setState(currentState => ({\n      activeNotes: currentState.activeNotes.filter(\n        activeNote => activeNote !== midiNumber\n      )\n    }));\n  };\n\n  stopAllNotes = () => {\n    this.setState(currentState => ({\n      activeNotes: []\n    }));\n  };\n\n  render() {\n    return (\n      <ReactPiano\n        disabled={false}\n        noteRange={noteRange}\n        playNote={this.props.midiOut.playNote}\n        stopNote={this.props.midiOut.stopNote}\n        width={1000}\n        keyboardShortcuts={keyboardShortcuts}\n        activeNotes={this.state.activeNotes}\n      />\n    );\n  }\n}\n\nexport default Piano;\n","import React, { ReactNode } from \"react\";\nimport { MidiNoteConsumer } from \"react-piano\";\n\nimport { MidiReceiver, MidiPressEvent, MidiEvent } from \"./@types\";\n\nexport type PlayerProps = {\n  midiOut: MidiReceiver;\n  audioContext: AudioContext;\n  render: (renderProps: RenderProps) => ReactNode;\n};\n\nexport type PlayerState = {\n  isPlaying: boolean;\n  schedule: Array<\n    MidiPressEvent & {\n      action: MidiNoteConsumer;\n    }\n  >;\n  clock: NodeJS.Timeout;\n};\n\ntype RenderProps = {\n  play: (events: MidiEvent[]) => void;\n  stop: () => void;\n  isPlaying: boolean;\n};\n\nexport class Player extends React.Component<PlayerProps, PlayerState> {\n  constructor(props: PlayerProps) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n      schedule: [],\n      clock: setInterval(this.checkSchedule, 2)\n    };\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.state.clock);\n  };\n\n  checkSchedule = () => {\n    if (this.state.isPlaying === false) {\n      return;\n    }\n    const currentTime = this.props.audioContext.currentTime;\n    this.setState(currentState => {\n      let { schedule, isPlaying } = currentState;\n      while (schedule.length > 0) {\n        if (schedule[0].absoluteTime < currentTime) {\n          const event = schedule.shift();\n          if (event) {\n            event.action(event.note);\n          }\n        } else {\n          break;\n        }\n      }\n      isPlaying = schedule.length > 0;\n      return {\n        isPlaying,\n        schedule\n      };\n    });\n  };\n\n  play: RenderProps[\"play\"] = recording => {\n    this.props.midiOut.stopAllNotes();\n    const currentTime = this.props.audioContext.currentTime;\n    const schedule = recording\n      .reduce(\n        (events, midiEvent) => {\n          events.push({\n            note: midiEvent.note,\n            absoluteTime: currentTime + midiEvent.time,\n            action: this.props.midiOut.playNote\n          });\n          events.push({\n            note: midiEvent.note,\n            absoluteTime: currentTime + midiEvent.time + midiEvent.duration,\n            action: this.props.midiOut.stopNote\n          });\n          return events;\n        },\n        [] as PlayerState[\"schedule\"]\n      )\n      .sort((a, b) => a.absoluteTime - b.absoluteTime);\n    this.setState({\n      isPlaying: true,\n      schedule\n    });\n  };\n\n  stop = () => {\n    this.props.midiOut.stopAllNotes();\n    this.setState({\n      isPlaying: false,\n      schedule: []\n    });\n  };\n\n  render() {\n    return this.props.render({\n      play: this.play,\n      stop: this.stop,\n      isPlaying: this.state.isPlaying\n    });\n  }\n}\n\nexport default Player;\n","import gql from \"graphql-tag\";\n\nexport const GET_RECORDINGS = gql`\n  query GetRecordingsQuery {\n    recordings {\n      _id\n      createdAt\n      events {\n        note\n        time\n        duration\n      }\n      duration\n      title\n    }\n  }\n`;\n\nexport const ADD_RECORDING = gql`\n  mutation AddRecordingMutation($recording: InputRecording) {\n    addRecording(recording: $recording) {\n      createdAt\n      events {\n        note\n        time\n        duration\n      }\n      duration\n      title\n    }\n  }\n`;\n","import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl, { FormControlProps } from \"react-bootstrap/FormControl\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport { Recording } from \"../@types\";\nimport {\n  AddRecordingMutation,\n  AddRecordingMutationVariables\n} from \"../@types/graphql\";\nimport { ADD_RECORDING } from \"./queries\";\n\ntype RecordingFormProps = {\n  recording: Recording;\n  onConfirm: (recording: Recording) => void;\n  onCancel: () => void;\n};\n\ntype RecordingFormState = {\n  title: string;\n};\n\nexport class RecordingForm extends React.Component<\n  RecordingFormProps,\n  RecordingFormState\n> {\n  constructor(props: RecordingFormProps) {\n    super(props);\n    this.state = {\n      title: this.props.recording.title || \"\"\n    };\n  }\n\n  setTitle = (event: React.FormEvent<FormControl & FormControlProps>) => {\n    if (typeof event.currentTarget.value === \"string\") {\n      this.setState({\n        title: event.currentTarget.value\n      });\n    }\n  };\n\n  cancel = () => {\n    this.props.onCancel();\n  };\n\n  save = () => {\n    const recording = {\n      ...this.props.recording,\n      title: this.state.title\n    };\n    this.props.onConfirm(recording);\n  };\n\n  render() {\n    return (\n      <Modal show={true} onHide={this.cancel}>\n        <Form onSubmit={this.save}>\n          <Modal.Body>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Recording title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter a title for your recording\"\n                value={this.state.title}\n                onChange={this.setTitle}\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.cancel}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={this.save}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport const RecordingFormWithQuery = (props: RecordingFormProps) => {\n  return (\n    <Mutation<AddRecordingMutation, AddRecordingMutationVariables>\n      mutation={ADD_RECORDING}\n    >\n      {(addRecording, { data }) => (\n        <RecordingForm\n          {...props}\n          onConfirm={recording => {\n            addRecording({\n              variables: { recording } as AddRecordingMutationVariables\n            });\n            props.onConfirm(recording);\n          }}\n        />\n      )}\n    </Mutation>\n  );\n};\n\nexport default RecordingFormWithQuery;\n","import React from \"react\";\nimport { FaPlay, FaStop } from \"react-icons/fa\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { Recording } from \"../@types\";\nimport { secondsToClock } from \"../utils\";\n\ntype LibraryRecordingProps = {\n  recording: Recording;\n  isPlaying: boolean;\n  play: (recording: Recording) => void;\n  stop: () => void;\n};\n\nexport class LibraryRecording extends React.Component<LibraryRecordingProps> {\n  play = () => {\n    this.props.play(this.props.recording);\n  };\n\n  render = () => {\n    return (\n      <span>\n        {this.props.isPlaying === false ? (\n          <Button variant=\"primary\" size=\"sm\" onClick={this.play}>\n            <FaPlay />\n          </Button>\n        ) : (\n          <Button variant=\"primary\" size=\"sm\" onClick={this.props.stop}>\n            <FaStop />\n          </Button>\n        )}\n        {\" \" + this.props.recording.title}\n        {this.props.recording.duration &&\n          \" - \" + secondsToClock(this.props.recording.duration)}\n        <span style={{ float: \"right\" }}>\n          {this.props.recording.createdAt.toLocaleString()}\n        </span>\n      </span>\n    );\n  };\n}\n\nexport default LibraryRecording;\n","import React, { ReactNode } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Query } from \"react-apollo\";\n\nimport { Recording, MidiEvent } from \"../@types\";\nimport RecordingForm from \"./RecordingForm\";\nimport { LibraryRecording } from \"./LibraryRecording\";\n\nimport { GetRecordingsQuery } from \"../@types/graphql\";\nimport { GET_RECORDINGS } from \"./queries\";\n\ntype RenderProps = {\n  addRecording: (recording: Recording) => void;\n};\n\ntype LibraryProps = {\n  onPlay: (events: MidiEvent[]) => void;\n  onStop: () => void;\n  isPlaying: boolean;\n  render: (renderProps: RenderProps) => ReactNode;\n  recordings?: Recording[];\n};\n\ntype LibraryState = {\n  recordings: Recording[];\n  currentlyPlaying: Recording | null;\n  newRecording: Recording | null;\n};\n\nexport class Library extends React.Component<LibraryProps, LibraryState> {\n  constructor(props: LibraryProps) {\n    super(props);\n    this.state = {\n      recordings: props.recordings || [],\n      currentlyPlaying: null,\n      newRecording: null\n    };\n  }\n\n  play = (recording: Recording) => {\n    this.props.onPlay(recording.events);\n    this.setState({\n      currentlyPlaying: recording\n    });\n  };\n\n  stop = () => {\n    this.props.onStop();\n    this.setState({\n      currentlyPlaying: null\n    });\n  };\n\n  addRecording: RenderProps[\"addRecording\"] = recording => {\n    this.setState({\n      newRecording: recording\n    });\n  };\n\n  saveRecording = (recording: Recording) => {\n    this.setState({\n      recordings: [...this.state.recordings, recording],\n      newRecording: null\n    });\n  };\n\n  cancelSaving = () => {\n    this.setState({\n      newRecording: null\n    });\n  };\n\n  render() {\n    const recordings = this.state.recordings.map((recording, i) => (\n      <ListGroup.Item>\n        <LibraryRecording\n          key={i}\n          recording={recording}\n          play={this.play}\n          stop={this.stop}\n          isPlaying={\n            this.state.currentlyPlaying === recording && this.props.isPlaying\n          }\n        />\n      </ListGroup.Item>\n    ));\n\n    return (\n      <div>\n        {this.props.render({ addRecording: this.addRecording })}\n        <ListGroup>\n          {recordings.length > 0 ? (\n            recordings\n          ) : (\n            <ListGroup.Item>No recordings yet...</ListGroup.Item>\n          )}\n        </ListGroup>\n        {this.state.newRecording !== null && (\n          <RecordingForm\n            recording={this.state.newRecording}\n            onConfirm={this.saveRecording}\n            onCancel={this.cancelSaving}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport const LibraryWithQuery = (props: LibraryProps) => {\n  return (\n    <Query<GetRecordingsQuery> query={GET_RECORDINGS}>\n      {({ loading, error, data }) => {\n        if (loading) return \"Loading...\";\n        if (error) return `Error! ${error.message}`;\n        if (data && data.recordings) {\n          props.recordings = data.recordings as Recording[];\n        }\n        return <Library {...props} />;\n      }}\n    </Query>\n  );\n};\n\nexport default LibraryWithQuery;\n","import React from \"react\";\n\nimport MidiRouter from \"./MidiRouter\";\nimport SoundfontProvider from \"./SoundfontProvider\";\nimport Recorder from \"./Recorder\";\nimport Piano from \"./Piano\";\nimport Player from \"./Player\";\nimport Library from \"./library\";\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\nexport class Stage extends React.Component {\n  render() {\n    return (\n      <MidiRouter\n        render={({ addMidiIn, addMidiOut }) => (\n          <div>\n            <SoundfontProvider\n              instrumentName=\"acoustic_grand_piano\"\n              audioContext={audioContext}\n              midiIn={addMidiIn(\"soundfont\")}\n            />\n            <Piano\n              midiIn={addMidiIn(\"piano\")}\n              midiOut={addMidiOut([\"soundfont\", \"recorder\"])}\n            />\n            <Player\n              audioContext={audioContext}\n              midiOut={addMidiOut([\"piano\"])}\n              render={({ play, stop, isPlaying }) => (\n                <Library\n                  onPlay={play}\n                  onStop={stop}\n                  isPlaying={isPlaying}\n                  render={({ addRecording }) => (\n                    <Recorder\n                      audioContext={audioContext}\n                      midiIn={addMidiIn(\"recorder\")}\n                      onStopRecording={addRecording}\n                    />\n                  )}\n                />\n              )}\n            />\n          </div>\n        )}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Stage } from \"./Stage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>React Piano Recorder</h1>\n      <Stage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport './index.css';\nimport App from './App';\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\"\n});\n\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}